---
apiVersion: v1
kind: Namespace
metadata:
  name: #{Namespace}#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
  labels:
    app: #{Application}#
spec:
  replicas: #{Replicas.Min}#
  selector:
    matchLabels:
      app: #{Application}#
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: #{Application}#
    spec:
      containers:
        - name: #{Application}#
          image: #{Image}#
          resources:
            requests:
              memory: #{Requests.Memory}#
              cpu: #{Requests.CPU}#
            limits:
              memory: #{Limits.Memory}#
              cpu: #{Limits.CPU}#
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-connection
                  key: MONGO_URI
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: do-s3
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: do-s3
                  key: AWS_REGION
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: do-s3
                  key: AWS_SECRET_ACCESS_KEY
            - name: BACKUP_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: mongo-backup-auth-token
                  key: BACKUP_AUTH_TOKEN
          startupProbe:
            httpGet:
              path: /remote-falcon-mongo-backup/q/health
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            periodSeconds: 1
          livenessProbe:
            httpGet:
              path: /remote-falcon-mongo-backup/q/health/live
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            periodSeconds: 1
          readinessProbe:
            httpGet:
              path: /remote-falcon-mongo-backup/q/health/ready
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 30
            periodSeconds: 1
      imagePullSecrets:
        - name: remote-falcon-ghcr
---
apiVersion: v1
kind: Service
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
spec:
  type: ClusterIP
  ports:
    - port: 8080
  selector:
    app: #{Application}#
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{Application}#
  namespace: #{Namespace}#
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
spec:
  rules:
    - host: #{Host}#
      http:
        paths:
          - pathType: Prefix
            path: /remote-falcon-mongo-backup
            backend:
              service:
                name: #{Application}#
                port:
                  number: 8080